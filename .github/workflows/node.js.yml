# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_DEPLOY }}
    - name: Build the image 
      run: | 
        docker build . --tag ghcr.io/pemsa-devbk/rpc-mw/rpc-mw:latest
        docker push ghcr.io/pemsa-devbk/rpc-mw/rpc-mw:latest

  deploy:
    needs: create-docker-image
    runs-on: ubuntu-latest
    steps: 
      - name: install sshpass
        run: sudo apt-get install -y sshpass
      - name: SSH into server
        run: |
          sshpass -p ${{ secrets.SERVER_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} -p 3000 <<EOF 
            cd /home/server_admin/dp/pemsa/back/service_9000_datamw/ 2>&1 || echo "Error al cambiar de directorio: \$?"
            docker login ghcr.io -u pemsa-devbk -p ${{ secrets.TOKEN_DEPLOY }}
            docker pull ghcr.io/pemsa-devbk/rpc-mw/rpc-mw:latest
            docker stop service_mw && docker rm service_mw
            docker run -d \
              --name service_mw \
              --network rpc_mw \
              --restart always \
              -v /home/server_admin/dp/pemsa/back/service_9000_datamw/certs:/app/dist/certs \
              -e DATABASE_USER=${{ secrets.DATABASE_USER }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e SERVER=${{ secrets.SERVER_DB }} \
              -e DATABASE=${{ secrets.DATABASE }} \
              ghcr.io/pemsa-devbk/rpc-mw/rpc-mw:latest 
          EOF